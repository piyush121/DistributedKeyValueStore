# Makefile.in generated by automake 1.14.1 from Makefile.am.
# cpp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libfb303
pkgincludedir = $(includedir)/libfb303
pkglibdir = $(libdir)/libfb303
pkglibexecdir = $(libexecdir)/libfb303
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
#shared_PROGRAMS = libfb303.so$(EXEEXT)
subdir = cpp
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/../../depcomp $(include_fb303_HEADERS) \
	$(include_fb303if_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/ax_boost_base.m4 \
	$(top_srcdir)/aclocal/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/aclocal/ax_javac_and_java.m4 \
	$(top_srcdir)/aclocal/ax_thrift_internal.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(shareddir)" \
	"$(DESTDIR)$(include_fb303dir)" \
	"$(DESTDIR)$(include_fb303ifdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libfb303_a_AR = $(AR) $(ARFLAGS)
libfb303_a_LIBADD =
am__libfb303_a_SOURCES_DIST = gen-cpp/FacebookService.cpp \
	gen-cpp/fb303_constants.cpp gen-cpp/fb303_types.cpp \
	FacebookBase.cpp ServiceTracker.cpp
am__objects_1 = FacebookService.$(OBJEXT) fb303_constants.$(OBJEXT) \
	fb303_types.$(OBJEXT) FacebookBase.$(OBJEXT) \
	ServiceTracker.$(OBJEXT)
am_libfb303_a_OBJECTS = $(am__objects_1)
libfb303_a_OBJECTS = $(am_libfb303_a_OBJECTS)
PROGRAMS = $(shared_PROGRAMS)
am__libfb303_so_SOURCES_DIST = gen-cpp/FacebookService.cpp \
	gen-cpp/fb303_constants.cpp gen-cpp/fb303_types.cpp \
	FacebookBase.cpp ServiceTracker.cpp
am__objects_2 = libfb303_so-FacebookService.$(OBJEXT) \
	libfb303_so-fb303_constants.$(OBJEXT) \
	libfb303_so-fb303_types.$(OBJEXT) \
	libfb303_so-FacebookBase.$(OBJEXT) \
	libfb303_so-ServiceTracker.$(OBJEXT)
#am_libfb303_so_OBJECTS = $(am__objects_2)
libfb303_so_OBJECTS = $(am_libfb303_so_OBJECTS)
libfb303_so_LDADD = $(LDADD)
libfb303_so_LINK = $(CXXLD) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) \
	$(libfb303_so_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/../../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libfb303_a_SOURCES) $(libfb303_so_SOURCES)
DIST_SOURCES = $(am__libfb303_a_SOURCES_DIST) \
	$(am__libfb303_so_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_fb303_HEADERS) $(include_fb303if_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /thrift/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ANT = /usr/bin/ant
ANT_FLAGS = 
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /thrift/missing autoconf
AUTOHEADER = ${SHELL} /thrift/missing autoheader
AUTOMAKE = ${SHELL} /thrift/missing automake-1.14
AWK = mawk
BASH = /bin/bash
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -O3
CLASSPATH = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -O3 -std=c++11
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libfb303\" -DPACKAGE_TARNAME=\"libfb303\" -DPACKAGE_VERSION=\"20080209\" -DPACKAGE_STRING=\"libfb303\ 20080209\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DHAVE_CXX11=1 -DHAVE_BOOST=/\*\*/ -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_NETINET_IN_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTERNAL_PATH = /thrift/contrib/fb303
GLOBAL_FOOTER_MK = include /thrift/contrib/fb303/global_footer.mk
GLOBAL_HEADER_MK = include /thrift/contrib/fb303/global_header.mk
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
LTYPE = .a
MAKEINFO = ${SHELL} /thrift/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = libfb303
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libfb303
PACKAGE_STRING = libfb303 20080209
PACKAGE_TARNAME = libfb303
PACKAGE_URL = 
PACKAGE_VERSION = 20080209
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PHP = /usr/bin/php
PRODUCT_MK = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
PY_PREFIX = /usr
RANLIB = ranlib
SET_MAKE = 
SHARED_CFLAGS = 
SHARED_CXXFLAGS = 
SHARED_LDFLAGS = 
SHELL = /bin/bash
STRIP = 
VERSION = 20080209
abs_builddir = /thrift/contrib/fb303/cpp
abs_srcdir = /thrift/contrib/fb303/cpp
abs_top_builddir = /thrift/contrib/fb303
abs_top_srcdir = /thrift/contrib/fb303
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /thrift/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/libfb303
pkgpythondir = ${pythondir}/libfb303
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
thrift_home = /usr/local
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# User specified path variables set in configure.ac.
# thrift_home
#
THRIFT = $(thrift_home)/bin/thrift

# User defined conditionals and conditonal statements set up in configure.ac.
#DEBUG_CPPFLAGS = -DDEBUG_TIMING

# Set common flags recognized by automake.
# DO NOT USE CPPFLAGS, CXXFLAGS, CFLAGS, LDFLAGS here! Set in configure.ac and|or override on command line.
# USE flags AM_CXXFLAGS, AM_CFLAGS, AM_CPPFLAGS, AM_LDFLAGS, LDADD in this section.
AM_CPPFLAGS = -I.. -Igen-cpp -I$(thrift_home)/include/thrift \
	$(BOOST_CPPFLAGS) $(FB_CPPFLAGS) $(DEBUG_CPPFLAGS)

# GENERATE BUILD RULES
# Set Program/library specific flags recognized by automake.
# Use <progname|libname>_<FLAG> to set prog / lib specific flag s
# foo_CXXFLAGS foo_CPPFLAGS foo_LDFLAGS foo_LDADD
fb303_lib = gen-cpp/FacebookService.cpp gen-cpp/fb303_constants.cpp gen-cpp/fb303_types.cpp FacebookBase.cpp ServiceTracker.cpp

# Static -- multiple libraries can be defined
lib_LIBRARIES = libfb303.a
libfb303_a_SOURCES = $(fb303_lib)
#INTERNAL_LIBS = libfb303.so
INTERNAL_LIBS = libfb303.a

# Shared -- multiple libraries can be defined
#shareddir = $(prefix)/lib
#libfb303_so_SOURCES = $(fb303_lib)
#libfb303_so_CXXFLAGS = $(SHARED_CXXFLAGS)
#libfb303_so_LDFLAGS = $(SHARED_LDFLAGS)
include_fb303dir = $(includedir)/thrift/fb303
include_fb303_HEADERS = FacebookBase.h ServiceTracker.h gen-cpp/FacebookService.h gen-cpp/fb303_constants.h gen-cpp/fb303_types.h
include_fb303ifdir = $(prefix)/share/fb303/if
include_fb303if_HEADERS = ../if/fb303.thrift
BUILT_SOURCES = thriftstyle
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign cpp/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign cpp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libfb303.a: $(libfb303_a_OBJECTS) $(libfb303_a_DEPENDENCIES) $(EXTRA_libfb303_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libfb303.a
	$(AM_V_AR)$(libfb303_a_AR) libfb303.a $(libfb303_a_OBJECTS) $(libfb303_a_LIBADD)
	$(AM_V_at)$(RANLIB) libfb303.a
install-sharedPROGRAMS: $(shared_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(shared_PROGRAMS)'; test -n "$(shareddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(shareddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(shareddir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(shareddir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(shareddir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sharedPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(shared_PROGRAMS)'; test -n "$(shareddir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(shareddir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(shareddir)" && rm -f $$files

clean-sharedPROGRAMS:
	-test -z "$(shared_PROGRAMS)" || rm -f $(shared_PROGRAMS)

libfb303.so$(EXEEXT): $(libfb303_so_OBJECTS) $(libfb303_so_DEPENDENCIES) $(EXTRA_libfb303_so_DEPENDENCIES) 
	@rm -f libfb303.so$(EXEEXT)
	$(AM_V_CXXLD)$(libfb303_so_LINK) $(libfb303_so_OBJECTS) $(libfb303_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/FacebookBase.Po
include ./$(DEPDIR)/FacebookService.Po
include ./$(DEPDIR)/ServiceTracker.Po
include ./$(DEPDIR)/fb303_constants.Po
include ./$(DEPDIR)/fb303_types.Po
include ./$(DEPDIR)/libfb303_so-FacebookBase.Po
include ./$(DEPDIR)/libfb303_so-FacebookService.Po
include ./$(DEPDIR)/libfb303_so-ServiceTracker.Po
include ./$(DEPDIR)/libfb303_so-fb303_constants.Po
include ./$(DEPDIR)/libfb303_so-fb303_types.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

FacebookService.o: gen-cpp/FacebookService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FacebookService.o -MD -MP -MF $(DEPDIR)/FacebookService.Tpo -c -o FacebookService.o `test -f 'gen-cpp/FacebookService.cpp' || echo '$(srcdir)/'`gen-cpp/FacebookService.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FacebookService.Tpo $(DEPDIR)/FacebookService.Po
#	$(AM_V_CXX)source='gen-cpp/FacebookService.cpp' object='FacebookService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FacebookService.o `test -f 'gen-cpp/FacebookService.cpp' || echo '$(srcdir)/'`gen-cpp/FacebookService.cpp

FacebookService.obj: gen-cpp/FacebookService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FacebookService.obj -MD -MP -MF $(DEPDIR)/FacebookService.Tpo -c -o FacebookService.obj `if test -f 'gen-cpp/FacebookService.cpp'; then $(CYGPATH_W) 'gen-cpp/FacebookService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/FacebookService.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FacebookService.Tpo $(DEPDIR)/FacebookService.Po
#	$(AM_V_CXX)source='gen-cpp/FacebookService.cpp' object='FacebookService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FacebookService.obj `if test -f 'gen-cpp/FacebookService.cpp'; then $(CYGPATH_W) 'gen-cpp/FacebookService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/FacebookService.cpp'; fi`

fb303_constants.o: gen-cpp/fb303_constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb303_constants.o -MD -MP -MF $(DEPDIR)/fb303_constants.Tpo -c -o fb303_constants.o `test -f 'gen-cpp/fb303_constants.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_constants.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/fb303_constants.Tpo $(DEPDIR)/fb303_constants.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_constants.cpp' object='fb303_constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb303_constants.o `test -f 'gen-cpp/fb303_constants.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_constants.cpp

fb303_constants.obj: gen-cpp/fb303_constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb303_constants.obj -MD -MP -MF $(DEPDIR)/fb303_constants.Tpo -c -o fb303_constants.obj `if test -f 'gen-cpp/fb303_constants.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_constants.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fb303_constants.Tpo $(DEPDIR)/fb303_constants.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_constants.cpp' object='fb303_constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb303_constants.obj `if test -f 'gen-cpp/fb303_constants.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_constants.cpp'; fi`

fb303_types.o: gen-cpp/fb303_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb303_types.o -MD -MP -MF $(DEPDIR)/fb303_types.Tpo -c -o fb303_types.o `test -f 'gen-cpp/fb303_types.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/fb303_types.Tpo $(DEPDIR)/fb303_types.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_types.cpp' object='fb303_types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb303_types.o `test -f 'gen-cpp/fb303_types.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_types.cpp

fb303_types.obj: gen-cpp/fb303_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb303_types.obj -MD -MP -MF $(DEPDIR)/fb303_types.Tpo -c -o fb303_types.obj `if test -f 'gen-cpp/fb303_types.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_types.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fb303_types.Tpo $(DEPDIR)/fb303_types.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_types.cpp' object='fb303_types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb303_types.obj `if test -f 'gen-cpp/fb303_types.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_types.cpp'; fi`

libfb303_so-FacebookService.o: gen-cpp/FacebookService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-FacebookService.o -MD -MP -MF $(DEPDIR)/libfb303_so-FacebookService.Tpo -c -o libfb303_so-FacebookService.o `test -f 'gen-cpp/FacebookService.cpp' || echo '$(srcdir)/'`gen-cpp/FacebookService.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-FacebookService.Tpo $(DEPDIR)/libfb303_so-FacebookService.Po
#	$(AM_V_CXX)source='gen-cpp/FacebookService.cpp' object='libfb303_so-FacebookService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-FacebookService.o `test -f 'gen-cpp/FacebookService.cpp' || echo '$(srcdir)/'`gen-cpp/FacebookService.cpp

libfb303_so-FacebookService.obj: gen-cpp/FacebookService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-FacebookService.obj -MD -MP -MF $(DEPDIR)/libfb303_so-FacebookService.Tpo -c -o libfb303_so-FacebookService.obj `if test -f 'gen-cpp/FacebookService.cpp'; then $(CYGPATH_W) 'gen-cpp/FacebookService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/FacebookService.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-FacebookService.Tpo $(DEPDIR)/libfb303_so-FacebookService.Po
#	$(AM_V_CXX)source='gen-cpp/FacebookService.cpp' object='libfb303_so-FacebookService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-FacebookService.obj `if test -f 'gen-cpp/FacebookService.cpp'; then $(CYGPATH_W) 'gen-cpp/FacebookService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/FacebookService.cpp'; fi`

libfb303_so-fb303_constants.o: gen-cpp/fb303_constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-fb303_constants.o -MD -MP -MF $(DEPDIR)/libfb303_so-fb303_constants.Tpo -c -o libfb303_so-fb303_constants.o `test -f 'gen-cpp/fb303_constants.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_constants.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-fb303_constants.Tpo $(DEPDIR)/libfb303_so-fb303_constants.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_constants.cpp' object='libfb303_so-fb303_constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-fb303_constants.o `test -f 'gen-cpp/fb303_constants.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_constants.cpp

libfb303_so-fb303_constants.obj: gen-cpp/fb303_constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-fb303_constants.obj -MD -MP -MF $(DEPDIR)/libfb303_so-fb303_constants.Tpo -c -o libfb303_so-fb303_constants.obj `if test -f 'gen-cpp/fb303_constants.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_constants.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-fb303_constants.Tpo $(DEPDIR)/libfb303_so-fb303_constants.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_constants.cpp' object='libfb303_so-fb303_constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-fb303_constants.obj `if test -f 'gen-cpp/fb303_constants.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_constants.cpp'; fi`

libfb303_so-fb303_types.o: gen-cpp/fb303_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-fb303_types.o -MD -MP -MF $(DEPDIR)/libfb303_so-fb303_types.Tpo -c -o libfb303_so-fb303_types.o `test -f 'gen-cpp/fb303_types.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-fb303_types.Tpo $(DEPDIR)/libfb303_so-fb303_types.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_types.cpp' object='libfb303_so-fb303_types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-fb303_types.o `test -f 'gen-cpp/fb303_types.cpp' || echo '$(srcdir)/'`gen-cpp/fb303_types.cpp

libfb303_so-fb303_types.obj: gen-cpp/fb303_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-fb303_types.obj -MD -MP -MF $(DEPDIR)/libfb303_so-fb303_types.Tpo -c -o libfb303_so-fb303_types.obj `if test -f 'gen-cpp/fb303_types.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_types.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-fb303_types.Tpo $(DEPDIR)/libfb303_so-fb303_types.Po
#	$(AM_V_CXX)source='gen-cpp/fb303_types.cpp' object='libfb303_so-fb303_types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-fb303_types.obj `if test -f 'gen-cpp/fb303_types.cpp'; then $(CYGPATH_W) 'gen-cpp/fb303_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen-cpp/fb303_types.cpp'; fi`

libfb303_so-FacebookBase.o: FacebookBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-FacebookBase.o -MD -MP -MF $(DEPDIR)/libfb303_so-FacebookBase.Tpo -c -o libfb303_so-FacebookBase.o `test -f 'FacebookBase.cpp' || echo '$(srcdir)/'`FacebookBase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-FacebookBase.Tpo $(DEPDIR)/libfb303_so-FacebookBase.Po
#	$(AM_V_CXX)source='FacebookBase.cpp' object='libfb303_so-FacebookBase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-FacebookBase.o `test -f 'FacebookBase.cpp' || echo '$(srcdir)/'`FacebookBase.cpp

libfb303_so-FacebookBase.obj: FacebookBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-FacebookBase.obj -MD -MP -MF $(DEPDIR)/libfb303_so-FacebookBase.Tpo -c -o libfb303_so-FacebookBase.obj `if test -f 'FacebookBase.cpp'; then $(CYGPATH_W) 'FacebookBase.cpp'; else $(CYGPATH_W) '$(srcdir)/FacebookBase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-FacebookBase.Tpo $(DEPDIR)/libfb303_so-FacebookBase.Po
#	$(AM_V_CXX)source='FacebookBase.cpp' object='libfb303_so-FacebookBase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-FacebookBase.obj `if test -f 'FacebookBase.cpp'; then $(CYGPATH_W) 'FacebookBase.cpp'; else $(CYGPATH_W) '$(srcdir)/FacebookBase.cpp'; fi`

libfb303_so-ServiceTracker.o: ServiceTracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-ServiceTracker.o -MD -MP -MF $(DEPDIR)/libfb303_so-ServiceTracker.Tpo -c -o libfb303_so-ServiceTracker.o `test -f 'ServiceTracker.cpp' || echo '$(srcdir)/'`ServiceTracker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-ServiceTracker.Tpo $(DEPDIR)/libfb303_so-ServiceTracker.Po
#	$(AM_V_CXX)source='ServiceTracker.cpp' object='libfb303_so-ServiceTracker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-ServiceTracker.o `test -f 'ServiceTracker.cpp' || echo '$(srcdir)/'`ServiceTracker.cpp

libfb303_so-ServiceTracker.obj: ServiceTracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -MT libfb303_so-ServiceTracker.obj -MD -MP -MF $(DEPDIR)/libfb303_so-ServiceTracker.Tpo -c -o libfb303_so-ServiceTracker.obj `if test -f 'ServiceTracker.cpp'; then $(CYGPATH_W) 'ServiceTracker.cpp'; else $(CYGPATH_W) '$(srcdir)/ServiceTracker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfb303_so-ServiceTracker.Tpo $(DEPDIR)/libfb303_so-ServiceTracker.Po
#	$(AM_V_CXX)source='ServiceTracker.cpp' object='libfb303_so-ServiceTracker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfb303_so_CXXFLAGS) $(CXXFLAGS) -c -o libfb303_so-ServiceTracker.obj `if test -f 'ServiceTracker.cpp'; then $(CYGPATH_W) 'ServiceTracker.cpp'; else $(CYGPATH_W) '$(srcdir)/ServiceTracker.cpp'; fi`
install-include_fb303HEADERS: $(include_fb303_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_fb303_HEADERS)'; test -n "$(include_fb303dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(include_fb303dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(include_fb303dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(include_fb303dir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(include_fb303dir)" || exit $$?; \
	done

uninstall-include_fb303HEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_fb303_HEADERS)'; test -n "$(include_fb303dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(include_fb303dir)'; $(am__uninstall_files_from_dir)
install-include_fb303ifHEADERS: $(include_fb303if_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_fb303if_HEADERS)'; test -n "$(include_fb303ifdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(include_fb303ifdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(include_fb303ifdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(include_fb303ifdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(include_fb303ifdir)" || exit $$?; \
	done

uninstall-include_fb303ifHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_fb303if_HEADERS)'; test -n "$(include_fb303ifdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(include_fb303ifdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(shareddir)" "$(DESTDIR)$(include_fb303dir)" "$(DESTDIR)$(include_fb303ifdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-local \
	clean-sharedPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-include_fb303HEADERS \
	install-include_fb303ifHEADERS install-sharedPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-include_fb303HEADERS \
	uninstall-include_fb303ifHEADERS uninstall-libLIBRARIES \
	uninstall-sharedPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-local clean-sharedPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-include_fb303HEADERS install-include_fb303ifHEADERS \
	install-info install-info-am install-libLIBRARIES install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sharedPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-include_fb303HEADERS \
	uninstall-include_fb303ifHEADERS uninstall-libLIBRARIES \
	uninstall-sharedPROGRAMS


include /thrift/contrib/fb303/global_header.mk



# Set up Thrift specific activity here.
# We assume that a <name>+types.cpp will always be built from <name>.thrift.
$(eval $(call thrift_template,.,../if/fb303.thrift,-I $(thrift_home)/share  --gen cpp:pure_enums ))

# Add to pre-existing target clean
clean-local: clean-common

include /thrift/contrib/fb303/global_footer.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
